{
  "swagger": "2.0",
  "info": {
    "title": "Datatable API",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "datatable",
      "description": "Endpoints for managing data in the datatable table"
    }
  ],
  "paths": {
    "/datatable/all": {
      "get": {
        "tags": ["datatable"],
        "summary": "Get all data",
        "description": "Retrieves all rows from the datatable table.",
        "responses": {
          "200": {
            "description": "Data found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Data"
              }
            }
          }
        }
      }
    },
    "/datatable/open": {
      "get": {
        "tags": ["datatable"],
        "summary": "Get open data",
        "description": "Retrieves all rows from the datatable table where the status column is equal to 'OPEN'.",
        "responses": {
          "200": {
            "description": "Data found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Data"
              }
            }
          }
        }
      }
    },
    "/datatable/{owner}": {
      "get": {
        "tags": ["datatable"],
        "summary": "Get data for a specific owner",
        "description": "Retrieves all rows from the datatable table where the owner column is equal to the specified owner.",
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "description": "Owner of the data to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Data found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Data"
              }
            }
          }
        }
      }
    },
    "/datatable/owners": {
      "get": {
        "tags": ["datatable"],
        "summary": "Get unique owners",
        "description": "Retrieves the unique set of owners from the datatable table.",
        "responses": {
          "200": {
            "description": "Owners found",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/datatable": {
      "post": {
        "tags": ["datatable"],
        "summary": "Create new data",
        "description": "Inserts a new row into the datatable table with the provided values.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Data to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Data created",
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        }
      }
    },
    "/datatable/{id}": {
      "put": {
        "tags": ["datatable"],
        "summary": "Update data",
        "description": "Updates an existing row in the datatable table with the provided values.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the data to update",
            "required": true,
            "type": "integer"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Data to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Data updated",
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        }
      },
      "delete": {
        "tags": ["datatable"],
        "summary": "Delete data",
        "description": "Deletes an existing row from the datatable table.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the data to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Data deleted",
            "schema": {
              "$ref": "#/definitions/Data"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Data": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "business_unit": {
          "type": "string"
        },
        "ship": {
          "type": "string"
        },
        "tve": {
          "type": "string"
        },
        "part_number": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "assembly": {
          "type": "string"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "need_date": {
          "type": "string",
          "format": "date-time"
        },
        "ecd": {
          "type": "string",
          "format": "date-time"
        },
        "impact": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "last_edit": {
          "type": "string",
          "format": "date-time"
        },
        "added_date": {
          "type": "string",
          "format": "date-time"
        },
        "on_board": {
          "type": "boolean"
        },
        "closed_date": {
          "type": "string",
          "format": "date-time"
        },
        "manager": {
          "type": "string"
        },
        "ntid": {
          "type": "string"
        }
      }
    }
  }
}
